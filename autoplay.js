// Generated by CoffeeScript 1.7.1
(function() {
  var delay, generator, hold_key, holded_keys, meter, play, play_list, play_note, play_notes, playing, playing_finished, release_holded_keys, simulate_keydown, simulate_keyup, start_playing, stop_playing, trigger;

  meter = 0.25;

  play_list = ".345|5.3.|5..8|5.3.|.456|6.4.|6...|....\n.456|6.4.|6.9.|7.5.|.345|5.8.|5...|....\n.678|8.6.|8..6|8.6.|.456|6.4.|6...|....\n.456|6.4.|2..3|4.2.|..1.|....|....";

  simulate_keydown = function(char) {
    return trigger('keydown', char.charCodeAt(0));
  };

  simulate_keyup = function(char) {
    return trigger('keyup', char.charCodeAt(0));
  };

  trigger = function(event_type, which) {
    var e;
    e = jQuery.Event(event_type);
    e.which = which;
    e.is_autoplay = true;
    return $(document).trigger(e);
  };

  holded_keys = '';

  hold_key = function(char) {
    simulate_keydown(char);
    return holded_keys += char;
  };

  release_holded_keys = function() {
    var k, _i, _len;
    for (_i = 0, _len = holded_keys.length; _i < _len; _i++) {
      k = holded_keys[_i];
      simulate_keyup(k);
    }
    return holded_keys = '';
  };

  playing = true;

  start_playing = function() {
    simulate_keydown('S');
    return play(generator(play_list));
  };

  stop_playing = function() {
    if (playing) {
      playing = false;
      return playing_finished();
    }
  };

  playing_finished = function() {
    release_holded_keys();
    return simulate_keyup('S');
  };

  play = function(music_box) {
    var note, symbol;
    if (!playing) {
      return;
    }
    symbol = music_box.next();
    switch (symbol) {
      case '|':
      case '\n':
        return play(music_box);
      case void 0:
        return stop_playing();
      case '{':
        play_notes(((function() {
          var _results;
          _results = [];
          while ((note = music_box.next()) !== '}') {
            _results.push(note);
          }
          return _results;
        })()));
        return delay((function() {
          return play(music_box);
        }), meter);
      default:
        play_note(symbol);
        return delay((function() {
          return play(music_box);
        }), meter);
    }
  };

  play_note = function(note_char) {
    switch (note_char) {
      case '.':
        break;
      default:
        release_holded_keys();
        return hold_key(note_char);
    }
  };

  play_notes = function(note_chars) {
    var n, _i, _len, _results;
    release_holded_keys();
    _results = [];
    for (_i = 0, _len = note_chars.length; _i < _len; _i++) {
      n = note_chars[_i];
      _results.push(hold_key(n));
    }
    return _results;
  };

  generator = function(input_stream) {
    var current;
    current = 0;
    return {
      next: function() {
        return input_stream[current++];
      }
    };
  };

  delay = function(callback, seconds) {
    return setTimeout(callback, seconds * 1000);
  };

  window.autoplay = {
    start_playing: start_playing,
    stop_playing: stop_playing
  };

}).call(this);
